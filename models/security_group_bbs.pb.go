// Code generated by protoc-gen-go-bbs. DO NOT EDIT.
// versions:
// - protoc-gen-go-bbs v0.0.1
// - protoc            v5.27.0--rc1
// source: security_group.proto

package models

// Prevent copylock errors when using ProtoPortRange directly
type PortRange struct {
	Start uint32
	End   uint32
}

func (x *PortRange) ToProto() *ProtoPortRange {
	proto := &ProtoPortRange{
		Start: x.Start,
		End:   x.End,
	}
	return proto
}

func PortRangeProtoMap(values []*PortRange) []*ProtoPortRange {
	result := make([]*ProtoPortRange, len(values))
	for i, val := range values {
		result[i] = val.ToProto()
	}
	return result
}

// Prevent copylock errors when using ProtoICMPInfo directly
type ICMPInfo struct {
	Type int32
	Code int32
}

func (x *ICMPInfo) ToProto() *ProtoICMPInfo {
	proto := &ProtoICMPInfo{
		Type: x.Type,
		Code: x.Code,
	}
	return proto
}

func ICMPInfoProtoMap(values []*ICMPInfo) []*ProtoICMPInfo {
	result := make([]*ProtoICMPInfo, len(values))
	for i, val := range values {
		result[i] = val.ToProto()
	}
	return result
}

// Prevent copylock errors when using ProtoSecurityGroupRule directly
type SecurityGroupRule struct {
	Protocol     string
	Destinations []string
	Ports        []uint32
	PortRange    *PortRange
	IcmpInfo     *ICMPInfo
	Log          bool
	Annotations  []string
}

func (x *SecurityGroupRule) ToProto() *ProtoSecurityGroupRule {
	proto := &ProtoSecurityGroupRule{
		Protocol:     x.Protocol,
		Destinations: x.Destinations,
		Ports:        x.Ports,
		PortRange:    x.PortRange.ToProto(),
		IcmpInfo:     x.IcmpInfo.ToProto(),
		Log:          x.Log,
		Annotations:  x.Annotations,
	}
	return proto
}

func SecurityGroupRuleProtoMap(values []*SecurityGroupRule) []*ProtoSecurityGroupRule {
	result := make([]*ProtoSecurityGroupRule, len(values))
	for i, val := range values {
		result[i] = val.ToProto()
	}
	return result
}
