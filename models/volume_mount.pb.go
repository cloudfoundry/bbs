// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: volume_mount.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoSharedDevice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeId      string                 `protobuf:"bytes,1,opt,name=volume_id,proto3" json:"volume_id,omitempty"`
	MountConfig   string                 `protobuf:"bytes,2,opt,name=mount_config,proto3" json:"mount_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoSharedDevice) Reset() {
	*x = ProtoSharedDevice{}
	mi := &file_volume_mount_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoSharedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSharedDevice) ProtoMessage() {}

func (x *ProtoSharedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_volume_mount_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSharedDevice.ProtoReflect.Descriptor instead.
func (*ProtoSharedDevice) Descriptor() ([]byte, []int) {
	return file_volume_mount_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoSharedDevice) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *ProtoSharedDevice) GetMountConfig() string {
	if x != nil {
		return x.MountConfig
	}
	return ""
}

type ProtoVolumeMount struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Driver       string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	ContainerDir string                 `protobuf:"bytes,3,opt,name=container_dir,proto3" json:"container_dir,omitempty"`
	Mode         string                 `protobuf:"bytes,6,opt,name=mode,proto3" json:"mode,omitempty"`
	// oneof device {
	Shared        *ProtoSharedDevice `protobuf:"bytes,7,opt,name=shared,proto3" json:"shared,omitempty"` // }
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoVolumeMount) Reset() {
	*x = ProtoVolumeMount{}
	mi := &file_volume_mount_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoVolumeMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoVolumeMount) ProtoMessage() {}

func (x *ProtoVolumeMount) ProtoReflect() protoreflect.Message {
	mi := &file_volume_mount_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoVolumeMount.ProtoReflect.Descriptor instead.
func (*ProtoVolumeMount) Descriptor() ([]byte, []int) {
	return file_volume_mount_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoVolumeMount) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *ProtoVolumeMount) GetContainerDir() string {
	if x != nil {
		return x.ContainerDir
	}
	return ""
}

func (x *ProtoVolumeMount) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ProtoVolumeMount) GetShared() *ProtoSharedDevice {
	if x != nil {
		return x.Shared
	}
	return nil
}

type ProtoVolumePlacement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverNames   []string               `protobuf:"bytes,1,rep,name=driver_names,proto3" json:"driver_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoVolumePlacement) Reset() {
	*x = ProtoVolumePlacement{}
	mi := &file_volume_mount_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoVolumePlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoVolumePlacement) ProtoMessage() {}

func (x *ProtoVolumePlacement) ProtoReflect() protoreflect.Message {
	mi := &file_volume_mount_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoVolumePlacement.ProtoReflect.Descriptor instead.
func (*ProtoVolumePlacement) Descriptor() ([]byte, []int) {
	return file_volume_mount_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoVolumePlacement) GetDriverNames() []string {
	if x != nil {
		return x.DriverNames
	}
	return nil
}

var File_volume_mount_proto protoreflect.FileDescriptor

const file_volume_mount_proto_rawDesc = "" +
	"\n" +
	"\x12volume_mount.proto\x12\x06models\x1a\tbbs.proto\"_\n" +
	"\x11ProtoSharedDevice\x12!\n" +
	"\tvolume_id\x18\x01 \x01(\tB\x03\xc0>\x01R\tvolume_id\x12'\n" +
	"\fmount_config\x18\x02 \x01(\tB\x03\xc0>\x01R\fmount_config\"\xbd\x01\n" +
	"\x10ProtoVolumeMount\x12\x1b\n" +
	"\x06driver\x18\x01 \x01(\tB\x03\xc0>\x01R\x06driver\x12)\n" +
	"\rcontainer_dir\x18\x03 \x01(\tB\x03\xc0>\x01R\rcontainer_dir\x12\x17\n" +
	"\x04mode\x18\x06 \x01(\tB\x03\xc0>\x01R\x04mode\x126\n" +
	"\x06shared\x18\a \x01(\v2\x19.models.ProtoSharedDeviceB\x03\xc0>\x01R\x06sharedJ\x04\b\x02\x10\x03J\x04\b\x04\x10\x05J\x04\b\x05\x10\x06\"?\n" +
	"\x14ProtoVolumePlacement\x12'\n" +
	"\fdriver_names\x18\x01 \x03(\tB\x03\xc0>\x01R\fdriver_namesB\"Z code.cloudfoundry.org/bbs/modelsb\x06proto3"

var (
	file_volume_mount_proto_rawDescOnce sync.Once
	file_volume_mount_proto_rawDescData []byte
)

func file_volume_mount_proto_rawDescGZIP() []byte {
	file_volume_mount_proto_rawDescOnce.Do(func() {
		file_volume_mount_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_volume_mount_proto_rawDesc), len(file_volume_mount_proto_rawDesc)))
	})
	return file_volume_mount_proto_rawDescData
}

var file_volume_mount_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_volume_mount_proto_goTypes = []any{
	(*ProtoSharedDevice)(nil),    // 0: models.ProtoSharedDevice
	(*ProtoVolumeMount)(nil),     // 1: models.ProtoVolumeMount
	(*ProtoVolumePlacement)(nil), // 2: models.ProtoVolumePlacement
}
var file_volume_mount_proto_depIdxs = []int32{
	0, // 0: models.ProtoVolumeMount.shared:type_name -> models.ProtoSharedDevice
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_volume_mount_proto_init() }
func file_volume_mount_proto_init() {
	if File_volume_mount_proto != nil {
		return
	}
	file_bbs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_volume_mount_proto_rawDesc), len(file_volume_mount_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_volume_mount_proto_goTypes,
		DependencyIndexes: file_volume_mount_proto_depIdxs,
		MessageInfos:      file_volume_mount_proto_msgTypes,
	}.Build()
	File_volume_mount_proto = out.File
	file_volume_mount_proto_goTypes = nil
	file_volume_mount_proto_depIdxs = nil
}
