// Code generated by protoc-gen-go-bbs. DO NOT EDIT.
// versions:
// - protoc-gen-go-bbs v0.0.1
// - protoc            v5.27.0--rc1
// source: image_layer.proto

package models

import (
	strconv "strconv"
)

type ImageLayer_DigestAlgorithm int32

const (
	ImageLayer_DigestAlgorithmInvalid ImageLayer_DigestAlgorithm = 0
	ImageLayer_DigestAlgorithmSha256  ImageLayer_DigestAlgorithm = 1
	ImageLayer_DigestAlgorithmSha512  ImageLayer_DigestAlgorithm = 2
)

// Enum value maps for ImageLayer_DigestAlgorithm
var (
	ImageLayer_DigestAlgorithm_name = map[int32]string{
		0: "DigestAlgorithmInvalid",
		1: "SHA256",
		2: "SHA512",
	}
	ImageLayer_DigestAlgorithm_value = map[string]int32{
		"DigestAlgorithmInvalid": 0,
		"SHA256":                 1,
		"SHA512":                 2,
	}
)

func (m ImageLayer_DigestAlgorithm) String() string {
	s, ok := ImageLayer_DigestAlgorithm_name[int32(m)]
	if ok {
		return s
	}
	return strconv.Itoa(int(m))
}

type ImageLayer_MediaType int32

const (
	ImageLayer_MediaTypeInvalid ImageLayer_MediaType = 0
	ImageLayer_MediaTypeTgz     ImageLayer_MediaType = 1
	ImageLayer_MediaTypeTar     ImageLayer_MediaType = 2
	ImageLayer_MediaTypeZip     ImageLayer_MediaType = 3
)

// Enum value maps for ImageLayer_MediaType
var (
	ImageLayer_MediaType_name = map[int32]string{
		0: "MediaTypeInvalid",
		1: "TGZ",
		2: "TAR",
		3: "ZIP",
	}
	ImageLayer_MediaType_value = map[string]int32{
		"MediaTypeInvalid": 0,
		"TGZ":              1,
		"TAR":              2,
		"ZIP":              3,
	}
)

func (m ImageLayer_MediaType) String() string {
	s, ok := ImageLayer_MediaType_name[int32(m)]
	if ok {
		return s
	}
	return strconv.Itoa(int(m))
}

type ImageLayer_Type int32

const (
	ImageLayer_LayerTypeInvalid   ImageLayer_Type = 0
	ImageLayer_LayerTypeShared    ImageLayer_Type = 1
	ImageLayer_LayerTypeExclusive ImageLayer_Type = 2
)

// Enum value maps for ImageLayer_Type
var (
	ImageLayer_Type_name = map[int32]string{
		0: "LayerTypeInvalid",
		1: "SHARED",
		2: "EXCLUSIVE",
	}
	ImageLayer_Type_value = map[string]int32{
		"LayerTypeInvalid": 0,
		"SHARED":           1,
		"EXCLUSIVE":        2,
	}
)

func (m ImageLayer_Type) String() string {
	s, ok := ImageLayer_Type_name[int32(m)]
	if ok {
		return s
	}
	return strconv.Itoa(int(m))
}

// Prevent copylock errors when using ProtoImageLayer directly
type ImageLayer struct {
	Name            string
	Url             string
	DestinationPath string
	LayerType       ImageLayer_Type
	MediaType       ImageLayer_MediaType
	DigestAlgorithm ImageLayer_DigestAlgorithm
	DigestValue     string
}

func (this *ImageLayer) Equal(that interface{}) bool {

	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ImageLayer)
	if !ok {
		that2, ok := that.(ImageLayer)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}

	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}

	if this.Name != that1.Name {
		return false
	}
	if this.Url != that1.Url {
		return false
	}
	if this.DestinationPath != that1.DestinationPath {
		return false
	}
	if this.LayerType != that1.LayerType {
		return false
	}
	if this.MediaType != that1.MediaType {
		return false
	}
	if this.DigestAlgorithm != that1.DigestAlgorithm {
		return false
	}
	if this.DigestValue != that1.DigestValue {
		return false
	}
	return true
}
func (m *ImageLayer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}
func (m *ImageLayer) SetName(value string) {
	if m != nil {
		m.Name = value
	}
}
func (m *ImageLayer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}
func (m *ImageLayer) SetUrl(value string) {
	if m != nil {
		m.Url = value
	}
}
func (m *ImageLayer) GetDestinationPath() string {
	if m != nil {
		return m.DestinationPath
	}
	return ""
}
func (m *ImageLayer) SetDestinationPath(value string) {
	if m != nil {
		m.DestinationPath = value
	}
}
func (m *ImageLayer) GetLayerType() ImageLayer_Type {
	if m != nil {
		return m.LayerType
	}
	return 0
}
func (m *ImageLayer) SetLayerType(value ImageLayer_Type) {
	if m != nil {
		m.LayerType = value
	}
}
func (m *ImageLayer) GetMediaType() ImageLayer_MediaType {
	if m != nil {
		return m.MediaType
	}
	return 0
}
func (m *ImageLayer) SetMediaType(value ImageLayer_MediaType) {
	if m != nil {
		m.MediaType = value
	}
}
func (m *ImageLayer) GetDigestAlgorithm() ImageLayer_DigestAlgorithm {
	if m != nil {
		return m.DigestAlgorithm
	}
	return 0
}
func (m *ImageLayer) SetDigestAlgorithm(value ImageLayer_DigestAlgorithm) {
	if m != nil {
		m.DigestAlgorithm = value
	}
}
func (m *ImageLayer) GetDigestValue() string {
	if m != nil {
		return m.DigestValue
	}
	return ""
}
func (m *ImageLayer) SetDigestValue(value string) {
	if m != nil {
		m.DigestValue = value
	}
}
func (x *ImageLayer) ToProto() *ProtoImageLayer {
	proto := &ProtoImageLayer{
		Name:            x.Name,
		Url:             x.Url,
		DestinationPath: x.DestinationPath,
		LayerType:       ProtoImageLayer_LayerType(x.LayerType),
		MediaType:       ProtoImageLayer_MediaType(x.MediaType),
		DigestAlgorithm: ProtoImageLayer_DigestAlgorithm(x.DigestAlgorithm),
		DigestValue:     x.DigestValue,
	}
	return proto
}

func ImageLayerProtoMap(values []*ImageLayer) []*ProtoImageLayer {
	result := make([]*ProtoImageLayer, len(values))
	for i, val := range values {
		result[i] = val.ToProto()
	}
	return result
}
