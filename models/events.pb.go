// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: events.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: Marked as deprecated in events.proto.
type ActualLRPCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpGroup *ActualLRPGroup `protobuf:"bytes,1,opt,name=actual_lrp_group,json=actualLrpGroup,proto3" json:"actual_lrp_group,omitempty"`
}

func (x *ActualLRPCreatedEvent) Reset() {
	*x = ActualLRPCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPCreatedEvent) ProtoMessage() {}

func (x *ActualLRPCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPCreatedEvent.ProtoReflect.Descriptor instead.
func (*ActualLRPCreatedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{0}
}

func (x *ActualLRPCreatedEvent) GetActualLrpGroup() *ActualLRPGroup {
	if x != nil {
		return x.ActualLrpGroup
	}
	return nil
}

// Deprecated: Marked as deprecated in events.proto.
type ActualLRPChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *ActualLRPGroup `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *ActualLRPGroup `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *ActualLRPChangedEvent) Reset() {
	*x = ActualLRPChangedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPChangedEvent) ProtoMessage() {}

func (x *ActualLRPChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPChangedEvent.ProtoReflect.Descriptor instead.
func (*ActualLRPChangedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{1}
}

func (x *ActualLRPChangedEvent) GetBefore() *ActualLRPGroup {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ActualLRPChangedEvent) GetAfter() *ActualLRPGroup {
	if x != nil {
		return x.After
	}
	return nil
}

// Deprecated: Marked as deprecated in events.proto.
type ActualLRPRemovedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpGroup *ActualLRPGroup `protobuf:"bytes,1,opt,name=actual_lrp_group,json=actualLrpGroup,proto3" json:"actual_lrp_group,omitempty"`
}

func (x *ActualLRPRemovedEvent) Reset() {
	*x = ActualLRPRemovedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPRemovedEvent) ProtoMessage() {}

func (x *ActualLRPRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPRemovedEvent.ProtoReflect.Descriptor instead.
func (*ActualLRPRemovedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{2}
}

func (x *ActualLRPRemovedEvent) GetActualLrpGroup() *ActualLRPGroup {
	if x != nil {
		return x.ActualLrpGroup
	}
	return nil
}

type ActualLRPInstanceCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrp *ActualLRP `protobuf:"bytes,1,opt,name=actual_lrp,json=actualLrp,proto3" json:"actual_lrp,omitempty"`
	TraceId   string     `protobuf:"bytes,2,opt,name=trace_id,proto3" json:"trace_id,omitempty"`
}

func (x *ActualLRPInstanceCreatedEvent) Reset() {
	*x = ActualLRPInstanceCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPInstanceCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPInstanceCreatedEvent) ProtoMessage() {}

func (x *ActualLRPInstanceCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPInstanceCreatedEvent.ProtoReflect.Descriptor instead.
func (*ActualLRPInstanceCreatedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{3}
}

func (x *ActualLRPInstanceCreatedEvent) GetActualLrp() *ActualLRP {
	if x != nil {
		return x.ActualLrp
	}
	return nil
}

func (x *ActualLRPInstanceCreatedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ActualLRPInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpNetInfo *ActualLRPNetInfo  `protobuf:"bytes,3,opt,name=actual_lrp_net_info,json=actualLrpNetInfo,proto3" json:"actual_lrp_net_info,omitempty"`
	CrashCount       int32              `protobuf:"varint,4,opt,name=crash_count,proto3" json:"crash_count,omitempty"`
	CrashReason      string             `protobuf:"bytes,5,opt,name=crash_reason,json=crashReason,proto3" json:"crash_reason,omitempty"`
	State            string             `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	PlacementError   string             `protobuf:"bytes,7,opt,name=placement_error,json=placementError,proto3" json:"placement_error,omitempty"`
	Since            int64              `protobuf:"varint,8,opt,name=since,proto3" json:"since,omitempty"`
	ModificationTag  *ModificationTag   `protobuf:"bytes,9,opt,name=modification_tag,proto3" json:"modification_tag,omitempty"`
	Presence         ActualLRP_Presence `protobuf:"varint,10,opt,name=presence,proto3,enum=models.ActualLRP_Presence" json:"presence,omitempty"`
	// Types that are assignable to OptionalRoutable:
	//
	//	*ActualLRPInfo_Routable
	OptionalRoutable isActualLRPInfo_OptionalRoutable `protobuf_oneof:"optional_routable"`
	AvailabilityZone string                           `protobuf:"bytes,12,opt,name=availability_zone,proto3" json:"availability_zone,omitempty"`
}

func (x *ActualLRPInfo) Reset() {
	*x = ActualLRPInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPInfo) ProtoMessage() {}

func (x *ActualLRPInfo) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPInfo.ProtoReflect.Descriptor instead.
func (*ActualLRPInfo) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{4}
}

func (x *ActualLRPInfo) GetActualLrpNetInfo() *ActualLRPNetInfo {
	if x != nil {
		return x.ActualLrpNetInfo
	}
	return nil
}

func (x *ActualLRPInfo) GetCrashCount() int32 {
	if x != nil {
		return x.CrashCount
	}
	return 0
}

func (x *ActualLRPInfo) GetCrashReason() string {
	if x != nil {
		return x.CrashReason
	}
	return ""
}

func (x *ActualLRPInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ActualLRPInfo) GetPlacementError() string {
	if x != nil {
		return x.PlacementError
	}
	return ""
}

func (x *ActualLRPInfo) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *ActualLRPInfo) GetModificationTag() *ModificationTag {
	if x != nil {
		return x.ModificationTag
	}
	return nil
}

func (x *ActualLRPInfo) GetPresence() ActualLRP_Presence {
	if x != nil {
		return x.Presence
	}
	return ActualLRP_ORDINARY
}

func (m *ActualLRPInfo) GetOptionalRoutable() isActualLRPInfo_OptionalRoutable {
	if m != nil {
		return m.OptionalRoutable
	}
	return nil
}

func (x *ActualLRPInfo) GetRoutable() bool {
	if x, ok := x.GetOptionalRoutable().(*ActualLRPInfo_Routable); ok {
		return x.Routable
	}
	return false
}

func (x *ActualLRPInfo) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

type isActualLRPInfo_OptionalRoutable interface {
	isActualLRPInfo_OptionalRoutable()
}

type ActualLRPInfo_Routable struct {
	Routable bool `protobuf:"varint,11,opt,name=Routable,proto3,oneof"`
}

func (*ActualLRPInfo_Routable) isActualLRPInfo_OptionalRoutable() {}

type ActualLRPInstanceChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpKey         *ActualLRPKey         `protobuf:"bytes,1,opt,name=actual_lrp_key,json=actualLrpKey,proto3" json:"actual_lrp_key,omitempty"`
	ActualLrpInstanceKey *ActualLRPInstanceKey `protobuf:"bytes,2,opt,name=actual_lrp_instance_key,json=actualLrpInstanceKey,proto3" json:"actual_lrp_instance_key,omitempty"`
	Before               *ActualLRPInfo        `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	After                *ActualLRPInfo        `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	TraceId              string                `protobuf:"bytes,5,opt,name=trace_id,proto3" json:"trace_id,omitempty"`
}

func (x *ActualLRPInstanceChangedEvent) Reset() {
	*x = ActualLRPInstanceChangedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPInstanceChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPInstanceChangedEvent) ProtoMessage() {}

func (x *ActualLRPInstanceChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPInstanceChangedEvent.ProtoReflect.Descriptor instead.
func (*ActualLRPInstanceChangedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{5}
}

func (x *ActualLRPInstanceChangedEvent) GetActualLrpKey() *ActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *ActualLRPInstanceChangedEvent) GetActualLrpInstanceKey() *ActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

func (x *ActualLRPInstanceChangedEvent) GetBefore() *ActualLRPInfo {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ActualLRPInstanceChangedEvent) GetAfter() *ActualLRPInfo {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *ActualLRPInstanceChangedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ActualLRPInstanceRemovedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrp *ActualLRP `protobuf:"bytes,1,opt,name=actual_lrp,json=actualLrp,proto3" json:"actual_lrp,omitempty"`
	TraceId   string     `protobuf:"bytes,2,opt,name=trace_id,proto3" json:"trace_id,omitempty"`
}

func (x *ActualLRPInstanceRemovedEvent) Reset() {
	*x = ActualLRPInstanceRemovedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPInstanceRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPInstanceRemovedEvent) ProtoMessage() {}

func (x *ActualLRPInstanceRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPInstanceRemovedEvent.ProtoReflect.Descriptor instead.
func (*ActualLRPInstanceRemovedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{6}
}

func (x *ActualLRPInstanceRemovedEvent) GetActualLrp() *ActualLRP {
	if x != nil {
		return x.ActualLrp
	}
	return nil
}

func (x *ActualLRPInstanceRemovedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type DesiredLRPCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DesiredLrp *DesiredLRP `protobuf:"bytes,1,opt,name=desired_lrp,json=desiredLrp,proto3" json:"desired_lrp,omitempty"`
	TraceId    string      `protobuf:"bytes,2,opt,name=trace_id,proto3" json:"trace_id,omitempty"`
}

func (x *DesiredLRPCreatedEvent) Reset() {
	*x = DesiredLRPCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesiredLRPCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredLRPCreatedEvent) ProtoMessage() {}

func (x *DesiredLRPCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredLRPCreatedEvent.ProtoReflect.Descriptor instead.
func (*DesiredLRPCreatedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{7}
}

func (x *DesiredLRPCreatedEvent) GetDesiredLrp() *DesiredLRP {
	if x != nil {
		return x.DesiredLrp
	}
	return nil
}

func (x *DesiredLRPCreatedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type DesiredLRPChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before  *DesiredLRP `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After   *DesiredLRP `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	TraceId string      `protobuf:"bytes,3,opt,name=trace_id,proto3" json:"trace_id,omitempty"`
}

func (x *DesiredLRPChangedEvent) Reset() {
	*x = DesiredLRPChangedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesiredLRPChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredLRPChangedEvent) ProtoMessage() {}

func (x *DesiredLRPChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredLRPChangedEvent.ProtoReflect.Descriptor instead.
func (*DesiredLRPChangedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{8}
}

func (x *DesiredLRPChangedEvent) GetBefore() *DesiredLRP {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *DesiredLRPChangedEvent) GetAfter() *DesiredLRP {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *DesiredLRPChangedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type DesiredLRPRemovedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DesiredLrp *DesiredLRP `protobuf:"bytes,1,opt,name=desired_lrp,json=desiredLrp,proto3" json:"desired_lrp,omitempty"`
	TraceId    string      `protobuf:"bytes,2,opt,name=trace_id,proto3" json:"trace_id,omitempty"`
}

func (x *DesiredLRPRemovedEvent) Reset() {
	*x = DesiredLRPRemovedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesiredLRPRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredLRPRemovedEvent) ProtoMessage() {}

func (x *DesiredLRPRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredLRPRemovedEvent.ProtoReflect.Descriptor instead.
func (*DesiredLRPRemovedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{9}
}

func (x *DesiredLRPRemovedEvent) GetDesiredLrp() *DesiredLRP {
	if x != nil {
		return x.DesiredLrp
	}
	return nil
}

func (x *DesiredLRPRemovedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ActualLRPCrashedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpKey         *ActualLRPKey         `protobuf:"bytes,1,opt,name=actual_lrp_key,json=actualLrpKey,proto3" json:"actual_lrp_key,omitempty"`
	ActualLrpInstanceKey *ActualLRPInstanceKey `protobuf:"bytes,2,opt,name=actual_lrp_instance_key,json=actualLrpInstanceKey,proto3" json:"actual_lrp_instance_key,omitempty"`
	CrashCount           int32                 `protobuf:"varint,3,opt,name=crash_count,proto3" json:"crash_count,omitempty"`
	CrashReason          string                `protobuf:"bytes,4,opt,name=crash_reason,json=crashReason,proto3" json:"crash_reason,omitempty"`
	Since                int64                 `protobuf:"varint,5,opt,name=since,proto3" json:"since,omitempty"`
}

func (x *ActualLRPCrashedEvent) Reset() {
	*x = ActualLRPCrashedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPCrashedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPCrashedEvent) ProtoMessage() {}

func (x *ActualLRPCrashedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPCrashedEvent.ProtoReflect.Descriptor instead.
func (*ActualLRPCrashedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{10}
}

func (x *ActualLRPCrashedEvent) GetActualLrpKey() *ActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *ActualLRPCrashedEvent) GetActualLrpInstanceKey() *ActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

func (x *ActualLRPCrashedEvent) GetCrashCount() int32 {
	if x != nil {
		return x.CrashCount
	}
	return 0
}

func (x *ActualLRPCrashedEvent) GetCrashReason() string {
	if x != nil {
		return x.CrashReason
	}
	return ""
}

func (x *ActualLRPCrashedEvent) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

type EventsByCellId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellId string `protobuf:"bytes,1,opt,name=cell_id,proto3" json:"cell_id,omitempty"`
}

func (x *EventsByCellId) Reset() {
	*x = EventsByCellId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsByCellId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsByCellId) ProtoMessage() {}

func (x *EventsByCellId) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsByCellId.ProtoReflect.Descriptor instead.
func (*EventsByCellId) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{11}
}

func (x *EventsByCellId) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

type TaskCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *TaskCreatedEvent) Reset() {
	*x = TaskCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCreatedEvent) ProtoMessage() {}

func (x *TaskCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCreatedEvent.ProtoReflect.Descriptor instead.
func (*TaskCreatedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{12}
}

func (x *TaskCreatedEvent) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type TaskChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Task `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Task `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *TaskChangedEvent) Reset() {
	*x = TaskChangedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskChangedEvent) ProtoMessage() {}

func (x *TaskChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskChangedEvent.ProtoReflect.Descriptor instead.
func (*TaskChangedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{13}
}

func (x *TaskChangedEvent) GetBefore() *Task {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *TaskChangedEvent) GetAfter() *Task {
	if x != nil {
		return x.After
	}
	return nil
}

type TaskRemovedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *TaskRemovedEvent) Reset() {
	*x = TaskRemovedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRemovedEvent) ProtoMessage() {}

func (x *TaskRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRemovedEvent.ProtoReflect.Descriptor instead.
func (*TaskRemovedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{14}
}

func (x *TaskRemovedEvent) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_events_proto protoreflect.FileDescriptor

var file_events_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c,
	0x72, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x6c, 0x72, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5d, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x72, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x79,
	0x0a, 0x15, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x5d, 0x0a, 0x15, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x40, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x6d, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xd0, 0x03, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x13, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4e, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x10,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x52,
	0x10, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61,
	0x67, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x52, 0x6f, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x52,
	0x6f, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xa8, 0x02, 0x0a, 0x1d, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0e,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c,
	0x72, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2d, 0x0a,
	0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c,
	0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x6c, 0x72, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c,
	0x52, 0x50, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x72, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x4c, 0x52, 0x50, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x4c, 0x72, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22,
	0x8a, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x52, 0x50, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x52, 0x50, 0x52, 0x06,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x44,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x52, 0x50, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x16,
	0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x6c, 0x72, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x52, 0x50, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x72, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x43, 0x72, 0x61, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b, 0x65, 0x79, 0x52,
	0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x0a,
	0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52,
	0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x14, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x2a, 0x0a,
	0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x10, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22,
	0x5c, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0x34, 0x0a,
	0x10, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x42, 0x22, 0x5a, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x62, 0x62, 0x73,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_events_proto_rawDescOnce sync.Once
	file_events_proto_rawDescData = file_events_proto_rawDesc
)

func file_events_proto_rawDescGZIP() []byte {
	file_events_proto_rawDescOnce.Do(func() {
		file_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_events_proto_rawDescData)
	})
	return file_events_proto_rawDescData
}

var file_events_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_events_proto_goTypes = []interface{}{
	(*ActualLRPCreatedEvent)(nil),         // 0: models.ActualLRPCreatedEvent
	(*ActualLRPChangedEvent)(nil),         // 1: models.ActualLRPChangedEvent
	(*ActualLRPRemovedEvent)(nil),         // 2: models.ActualLRPRemovedEvent
	(*ActualLRPInstanceCreatedEvent)(nil), // 3: models.ActualLRPInstanceCreatedEvent
	(*ActualLRPInfo)(nil),                 // 4: models.ActualLRPInfo
	(*ActualLRPInstanceChangedEvent)(nil), // 5: models.ActualLRPInstanceChangedEvent
	(*ActualLRPInstanceRemovedEvent)(nil), // 6: models.ActualLRPInstanceRemovedEvent
	(*DesiredLRPCreatedEvent)(nil),        // 7: models.DesiredLRPCreatedEvent
	(*DesiredLRPChangedEvent)(nil),        // 8: models.DesiredLRPChangedEvent
	(*DesiredLRPRemovedEvent)(nil),        // 9: models.DesiredLRPRemovedEvent
	(*ActualLRPCrashedEvent)(nil),         // 10: models.ActualLRPCrashedEvent
	(*EventsByCellId)(nil),                // 11: models.EventsByCellId
	(*TaskCreatedEvent)(nil),              // 12: models.TaskCreatedEvent
	(*TaskChangedEvent)(nil),              // 13: models.TaskChangedEvent
	(*TaskRemovedEvent)(nil),              // 14: models.TaskRemovedEvent
	(*ActualLRPGroup)(nil),                // 15: models.ActualLRPGroup
	(*ActualLRP)(nil),                     // 16: models.ActualLRP
	(*ActualLRPNetInfo)(nil),              // 17: models.ActualLRPNetInfo
	(*ModificationTag)(nil),               // 18: models.ModificationTag
	(ActualLRP_Presence)(0),               // 19: models.ActualLRP.Presence
	(*ActualLRPKey)(nil),                  // 20: models.ActualLRPKey
	(*ActualLRPInstanceKey)(nil),          // 21: models.ActualLRPInstanceKey
	(*DesiredLRP)(nil),                    // 22: models.DesiredLRP
	(*Task)(nil),                          // 23: models.Task
}
var file_events_proto_depIdxs = []int32{
	15, // 0: models.ActualLRPCreatedEvent.actual_lrp_group:type_name -> models.ActualLRPGroup
	15, // 1: models.ActualLRPChangedEvent.before:type_name -> models.ActualLRPGroup
	15, // 2: models.ActualLRPChangedEvent.after:type_name -> models.ActualLRPGroup
	15, // 3: models.ActualLRPRemovedEvent.actual_lrp_group:type_name -> models.ActualLRPGroup
	16, // 4: models.ActualLRPInstanceCreatedEvent.actual_lrp:type_name -> models.ActualLRP
	17, // 5: models.ActualLRPInfo.actual_lrp_net_info:type_name -> models.ActualLRPNetInfo
	18, // 6: models.ActualLRPInfo.modification_tag:type_name -> models.ModificationTag
	19, // 7: models.ActualLRPInfo.presence:type_name -> models.ActualLRP.Presence
	20, // 8: models.ActualLRPInstanceChangedEvent.actual_lrp_key:type_name -> models.ActualLRPKey
	21, // 9: models.ActualLRPInstanceChangedEvent.actual_lrp_instance_key:type_name -> models.ActualLRPInstanceKey
	4,  // 10: models.ActualLRPInstanceChangedEvent.before:type_name -> models.ActualLRPInfo
	4,  // 11: models.ActualLRPInstanceChangedEvent.after:type_name -> models.ActualLRPInfo
	16, // 12: models.ActualLRPInstanceRemovedEvent.actual_lrp:type_name -> models.ActualLRP
	22, // 13: models.DesiredLRPCreatedEvent.desired_lrp:type_name -> models.DesiredLRP
	22, // 14: models.DesiredLRPChangedEvent.before:type_name -> models.DesiredLRP
	22, // 15: models.DesiredLRPChangedEvent.after:type_name -> models.DesiredLRP
	22, // 16: models.DesiredLRPRemovedEvent.desired_lrp:type_name -> models.DesiredLRP
	20, // 17: models.ActualLRPCrashedEvent.actual_lrp_key:type_name -> models.ActualLRPKey
	21, // 18: models.ActualLRPCrashedEvent.actual_lrp_instance_key:type_name -> models.ActualLRPInstanceKey
	23, // 19: models.TaskCreatedEvent.task:type_name -> models.Task
	23, // 20: models.TaskChangedEvent.before:type_name -> models.Task
	23, // 21: models.TaskChangedEvent.after:type_name -> models.Task
	23, // 22: models.TaskRemovedEvent.task:type_name -> models.Task
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_events_proto_init() }
func file_events_proto_init() {
	if File_events_proto != nil {
		return
	}
	file_actual_lrp_proto_init()
	file_desired_lrp_proto_init()
	file_task_proto_init()
	file_modification_tag_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPChangedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPRemovedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPInstanceCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPInstanceChangedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPInstanceRemovedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesiredLRPCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesiredLRPChangedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesiredLRPRemovedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPCrashedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsByCellId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskChangedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRemovedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_events_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ActualLRPInfo_Routable)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_events_proto_goTypes,
		DependencyIndexes: file_events_proto_depIdxs,
		MessageInfos:      file_events_proto_msgTypes,
	}.Build()
	File_events_proto = out.File
	file_events_proto_rawDesc = nil
	file_events_proto_goTypes = nil
	file_events_proto_depIdxs = nil
}
