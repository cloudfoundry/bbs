syntax = "proto3";

package models;
option go_package="code.cloudfoundry.org/bbs/models";

import "bbs.proto";
import "environment_variables.proto";

message ProtoAction {
  // Note: we only expect one of the following set of fields to be
  // set. Previously we used `option (gogoproto.onlyone) = true' but since this
  // is now deprecated and oneof introduces a lot of structural changes, we
  // deferred on switching to oneof for now until there is a good reason for it.
  // disadvantages of using multiple optionals as opposed to oneof are:
  //   - less memory usage
  // disadvantages of using multiple optionals without onlyone:
  //   - writing our own GetAction/SetAction methods
  // action oneof {
    ProtoDownloadAction download_action = 1 [json_name="download"];
    ProtoUploadAction upload_action = 2 [json_name = "upload"];
    ProtoRunAction run_action = 3 [json_name = "run"];
    ProtoTimeoutAction timeout_action = 4 [json_name = "timeout"];
    ProtoEmitProgressAction emit_progress_action = 5 [json_name = "emit_progress"];
    ProtoTryAction try_action = 6 [json_name = "try"];
    ProtoParallelAction parallel_action = 7 [json_name = "parallel"];
    ProtoSerialAction serial_action = 8 [json_name = "serial"];
    ProtoCodependentAction codependent_action = 9 [json_name = "codependent"];
  // }
}

message ProtoDownloadAction {
  string artifact = 1;
  string from = 2 [json_name = "from", (bbs.bbs_json_always_emit) = true];
  string to = 3 [json_name = "to", (bbs.bbs_json_always_emit) = true];
  string cache_key = 4 [json_name = "cache_key", (bbs.bbs_json_always_emit) = true];
  string log_source = 5 [json_name = "log_source"];
  string user = 6 [json_name = "user", (bbs.bbs_json_always_emit) = true];
  string checksum_algorithm = 7 [json_name = "checksum_algorithm"];
  string checksum_value = 8 [json_name = "checksum_value"];
}

message ProtoUploadAction {
  string artifact = 1;
  string from = 2 [json_name = "from", (bbs.bbs_json_always_emit) = true];
  string to = 3 [json_name = "to", (bbs.bbs_json_always_emit) = true];
  string log_source = 4 [json_name = "log_source"];
  string user = 5 [json_name = "user", (bbs.bbs_json_always_emit) = true];
}

message ProtoRunAction {
  string path = 1 [json_name = "path", (bbs.bbs_json_always_emit) = true];
  repeated string args = 2;
  string dir = 3;
  repeated ProtoEnvironmentVariable env = 4;
  ProtoResourceLimits resource_limits = 5 [json_name = "resource_limits"];
  string user = 6 [json_name = "user", (bbs.bbs_json_always_emit) = true];
  string log_source = 7 [json_name = "log_source"];
  bool suppress_log_output = 8 [json_name = "suppress_log_output", (bbs.bbs_json_always_emit) = true];
}

message ProtoTimeoutAction {
  ProtoAction action = 1;
  int64 deprecated_timeout_ns = 2 [json_name = "timeout", deprecated=true];
  string log_source = 3 [json_name = "log_source"];
  int64 timeout_ms = 4 [json_name = "timeout_ms", (bbs.bbs_json_always_emit) = true];
}

message ProtoEmitProgressAction {
  ProtoAction action = 1;
  string start_message = 2 [json_name = "start_message", (bbs.bbs_json_always_emit) = true];
  string success_message = 3 [json_name = "success_message", (bbs.bbs_json_always_emit) = true];
  string failure_message_prefix = 4 [json_name = "failure_message_prefix", (bbs.bbs_json_always_emit) = true];
  string log_source = 5 [json_name = "log_source"];
}

message ProtoTryAction {
  ProtoAction action = 1;
  string log_source = 2 [json_name = "log_source"];
}

message ProtoParallelAction {
  repeated ProtoAction actions = 1;
  string log_source = 2 [json_name = "log_source"];
}

message ProtoSerialAction {
  repeated ProtoAction actions = 1;
  string log_source = 2 [json_name = "log_source"];
}

message ProtoCodependentAction {
  repeated ProtoAction actions = 1;
  string log_source = 2 [json_name = "log_source"];
}

message ProtoResourceLimits {
  optional uint64 nofile = 1 [(bbs.bbs_default_value) = "nil"];
  optional uint64 nproc = 2 [deprecated = true, (bbs.bbs_default_value) = "nil"];
}
