// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: actual_lrp_requests.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActualLRPLifecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ActualLRPLifecycleResponse) Reset() {
	*x = ActualLRPLifecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPLifecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPLifecycleResponse) ProtoMessage() {}

func (x *ActualLRPLifecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPLifecycleResponse.ProtoReflect.Descriptor instead.
func (*ActualLRPLifecycleResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{0}
}

func (x *ActualLRPLifecycleResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ActualLRPGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ActualLrpGroups []*ActualLRPGroup `protobuf:"bytes,2,rep,name=actual_lrp_groups,json=actualLrpGroups,proto3" json:"actual_lrp_groups,omitempty"`
}

func (x *ActualLRPGroupsResponse) Reset() {
	*x = ActualLRPGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPGroupsResponse) ProtoMessage() {}

func (x *ActualLRPGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPGroupsResponse.ProtoReflect.Descriptor instead.
func (*ActualLRPGroupsResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{1}
}

func (x *ActualLRPGroupsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ActualLRPGroupsResponse) GetActualLrpGroups() []*ActualLRPGroup {
	if x != nil {
		return x.ActualLrpGroups
	}
	return nil
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ActualLRPGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ActualLrpGroup *ActualLRPGroup `protobuf:"bytes,2,opt,name=actual_lrp_group,json=actualLrpGroup,proto3" json:"actual_lrp_group,omitempty"`
}

func (x *ActualLRPGroupResponse) Reset() {
	*x = ActualLRPGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPGroupResponse) ProtoMessage() {}

func (x *ActualLRPGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPGroupResponse.ProtoReflect.Descriptor instead.
func (*ActualLRPGroupResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{2}
}

func (x *ActualLRPGroupResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ActualLRPGroupResponse) GetActualLrpGroup() *ActualLRPGroup {
	if x != nil {
		return x.ActualLrpGroup
	}
	return nil
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ActualLRPGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	CellId string `protobuf:"bytes,2,opt,name=cell_id,proto3" json:"cell_id,omitempty"`
}

func (x *ActualLRPGroupsRequest) Reset() {
	*x = ActualLRPGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPGroupsRequest) ProtoMessage() {}

func (x *ActualLRPGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPGroupsRequest.ProtoReflect.Descriptor instead.
func (*ActualLRPGroupsRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{3}
}

func (x *ActualLRPGroupsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ActualLRPGroupsRequest) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ActualLRPGroupsByProcessGuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessGuid string `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
}

func (x *ActualLRPGroupsByProcessGuidRequest) Reset() {
	*x = ActualLRPGroupsByProcessGuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPGroupsByProcessGuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPGroupsByProcessGuidRequest) ProtoMessage() {}

func (x *ActualLRPGroupsByProcessGuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPGroupsByProcessGuidRequest.ProtoReflect.Descriptor instead.
func (*ActualLRPGroupsByProcessGuidRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{4}
}

func (x *ActualLRPGroupsByProcessGuidRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ActualLRPGroupByProcessGuidAndIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessGuid string `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	Index       int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ActualLRPGroupByProcessGuidAndIndexRequest) Reset() {
	*x = ActualLRPGroupByProcessGuidAndIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPGroupByProcessGuidAndIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPGroupByProcessGuidAndIndexRequest) ProtoMessage() {}

func (x *ActualLRPGroupByProcessGuidAndIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPGroupByProcessGuidAndIndexRequest.ProtoReflect.Descriptor instead.
func (*ActualLRPGroupByProcessGuidAndIndexRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{5}
}

func (x *ActualLRPGroupByProcessGuidAndIndexRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (x *ActualLRPGroupByProcessGuidAndIndexRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ClaimActualLRPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessGuid          string                `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	Index                int32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	ActualLrpInstanceKey *ActualLRPInstanceKey `protobuf:"bytes,3,opt,name=actual_lrp_instance_key,json=actualLrpInstanceKey,proto3" json:"actual_lrp_instance_key,omitempty"`
}

func (x *ClaimActualLRPRequest) Reset() {
	*x = ClaimActualLRPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimActualLRPRequest) ProtoMessage() {}

func (x *ClaimActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimActualLRPRequest.ProtoReflect.Descriptor instead.
func (*ClaimActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{6}
}

func (x *ClaimActualLRPRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (x *ClaimActualLRPRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ClaimActualLRPRequest) GetActualLrpInstanceKey() *ActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

type StartActualLRPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpKey            *ActualLRPKey             `protobuf:"bytes,1,opt,name=actual_lrp_key,json=actualLrpKey,proto3" json:"actual_lrp_key,omitempty"`
	ActualLrpInstanceKey    *ActualLRPInstanceKey     `protobuf:"bytes,2,opt,name=actual_lrp_instance_key,json=actualLrpInstanceKey,proto3" json:"actual_lrp_instance_key,omitempty"`
	ActualLrpNetInfo        *ActualLRPNetInfo         `protobuf:"bytes,3,opt,name=actual_lrp_net_info,json=actualLrpNetInfo,proto3" json:"actual_lrp_net_info,omitempty"`
	ActualLrpInternalRoutes []*ActualLRPInternalRoute `protobuf:"bytes,4,rep,name=actual_lrp_internal_routes,json=actualLrpInternalRoutes,proto3" json:"actual_lrp_internal_routes,omitempty"`
	MetricTags              map[string]string         `protobuf:"bytes,5,rep,name=metric_tags,json=metricTags,proto3" json:"metric_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to OptionalRoutable:
	//
	//	*StartActualLRPRequest_Routable
	OptionalRoutable isStartActualLRPRequest_OptionalRoutable `protobuf_oneof:"optional_routable"`
}

func (x *StartActualLRPRequest) Reset() {
	*x = StartActualLRPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActualLRPRequest) ProtoMessage() {}

func (x *StartActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActualLRPRequest.ProtoReflect.Descriptor instead.
func (*StartActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{7}
}

func (x *StartActualLRPRequest) GetActualLrpKey() *ActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *StartActualLRPRequest) GetActualLrpInstanceKey() *ActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

func (x *StartActualLRPRequest) GetActualLrpNetInfo() *ActualLRPNetInfo {
	if x != nil {
		return x.ActualLrpNetInfo
	}
	return nil
}

func (x *StartActualLRPRequest) GetActualLrpInternalRoutes() []*ActualLRPInternalRoute {
	if x != nil {
		return x.ActualLrpInternalRoutes
	}
	return nil
}

func (x *StartActualLRPRequest) GetMetricTags() map[string]string {
	if x != nil {
		return x.MetricTags
	}
	return nil
}

func (m *StartActualLRPRequest) GetOptionalRoutable() isStartActualLRPRequest_OptionalRoutable {
	if m != nil {
		return m.OptionalRoutable
	}
	return nil
}

func (x *StartActualLRPRequest) GetRoutable() bool {
	if x, ok := x.GetOptionalRoutable().(*StartActualLRPRequest_Routable); ok {
		return x.Routable
	}
	return false
}

type isStartActualLRPRequest_OptionalRoutable interface {
	isStartActualLRPRequest_OptionalRoutable()
}

type StartActualLRPRequest_Routable struct {
	Routable bool `protobuf:"varint,6,opt,name=Routable,proto3,oneof"`
}

func (*StartActualLRPRequest_Routable) isStartActualLRPRequest_OptionalRoutable() {}

type CrashActualLRPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpKey         *ActualLRPKey         `protobuf:"bytes,1,opt,name=actual_lrp_key,json=actualLrpKey,proto3" json:"actual_lrp_key,omitempty"`
	ActualLrpInstanceKey *ActualLRPInstanceKey `protobuf:"bytes,2,opt,name=actual_lrp_instance_key,json=actualLrpInstanceKey,proto3" json:"actual_lrp_instance_key,omitempty"`
	ErrorMessage         string                `protobuf:"bytes,3,opt,name=error_message,proto3" json:"error_message,omitempty"`
}

func (x *CrashActualLRPRequest) Reset() {
	*x = CrashActualLRPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrashActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrashActualLRPRequest) ProtoMessage() {}

func (x *CrashActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrashActualLRPRequest.ProtoReflect.Descriptor instead.
func (*CrashActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{8}
}

func (x *CrashActualLRPRequest) GetActualLrpKey() *ActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *CrashActualLRPRequest) GetActualLrpInstanceKey() *ActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

func (x *CrashActualLRPRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type FailActualLRPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpKey *ActualLRPKey `protobuf:"bytes,1,opt,name=actual_lrp_key,json=actualLrpKey,proto3" json:"actual_lrp_key,omitempty"`
	ErrorMessage string        `protobuf:"bytes,2,opt,name=error_message,proto3" json:"error_message,omitempty"`
}

func (x *FailActualLRPRequest) Reset() {
	*x = FailActualLRPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailActualLRPRequest) ProtoMessage() {}

func (x *FailActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailActualLRPRequest.ProtoReflect.Descriptor instead.
func (*FailActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{9}
}

func (x *FailActualLRPRequest) GetActualLrpKey() *ActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *FailActualLRPRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RetireActualLRPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualLrpKey *ActualLRPKey `protobuf:"bytes,1,opt,name=actual_lrp_key,json=actualLrpKey,proto3" json:"actual_lrp_key,omitempty"`
}

func (x *RetireActualLRPRequest) Reset() {
	*x = RetireActualLRPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetireActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetireActualLRPRequest) ProtoMessage() {}

func (x *RetireActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetireActualLRPRequest.ProtoReflect.Descriptor instead.
func (*RetireActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{10}
}

func (x *RetireActualLRPRequest) GetActualLrpKey() *ActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

type RemoveActualLRPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessGuid          string                `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	Index                int32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	ActualLrpInstanceKey *ActualLRPInstanceKey `protobuf:"bytes,3,opt,name=actual_lrp_instance_key,json=actualLrpInstanceKey,proto3" json:"actual_lrp_instance_key,omitempty"`
}

func (x *RemoveActualLRPRequest) Reset() {
	*x = RemoveActualLRPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveActualLRPRequest) ProtoMessage() {}

func (x *RemoveActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveActualLRPRequest.ProtoReflect.Descriptor instead.
func (*RemoveActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveActualLRPRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (x *RemoveActualLRPRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RemoveActualLRPRequest) GetActualLrpInstanceKey() *ActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

type ActualLRPsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ActualLrps []*ActualLRP `protobuf:"bytes,2,rep,name=actual_lrps,json=actualLrps,proto3" json:"actual_lrps,omitempty"`
}

func (x *ActualLRPsResponse) Reset() {
	*x = ActualLRPsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPsResponse) ProtoMessage() {}

func (x *ActualLRPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPsResponse.ProtoReflect.Descriptor instead.
func (*ActualLRPsResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{12}
}

func (x *ActualLRPsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ActualLRPsResponse) GetActualLrps() []*ActualLRP {
	if x != nil {
		return x.ActualLrps
	}
	return nil
}

type ActualLRPsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	CellId      string `protobuf:"bytes,2,opt,name=cell_id,proto3" json:"cell_id,omitempty"`
	ProcessGuid string `protobuf:"bytes,3,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	// Types that are assignable to OptionalIndex:
	//
	//	*ActualLRPsRequest_Index
	OptionalIndex isActualLRPsRequest_OptionalIndex `protobuf_oneof:"optional_index"`
}

func (x *ActualLRPsRequest) Reset() {
	*x = ActualLRPsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actual_lrp_requests_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualLRPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualLRPsRequest) ProtoMessage() {}

func (x *ActualLRPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualLRPsRequest.ProtoReflect.Descriptor instead.
func (*ActualLRPsRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{13}
}

func (x *ActualLRPsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ActualLRPsRequest) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *ActualLRPsRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (m *ActualLRPsRequest) GetOptionalIndex() isActualLRPsRequest_OptionalIndex {
	if m != nil {
		return m.OptionalIndex
	}
	return nil
}

func (x *ActualLRPsRequest) GetIndex() int32 {
	if x, ok := x.GetOptionalIndex().(*ActualLRPsRequest_Index); ok {
		return x.Index
	}
	return 0
}

type isActualLRPsRequest_OptionalIndex interface {
	isActualLRPsRequest_OptionalIndex()
}

type ActualLRPsRequest_Index struct {
	Index int32 `protobuf:"varint,4,opt,name=index,proto3,oneof"`
}

func (*ActualLRPsRequest_Index) isActualLRPsRequest_OptionalIndex() {}

var File_actual_lrp_requests_proto protoreflect.FileDescriptor

var file_actual_lrp_requests_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x1a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x41, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x72, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x83,
	0x01, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40,
	0x0a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x3a, 0x02, 0x18, 0x01, 0x22, 0x4e, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52,
	0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x3a, 0x02, 0x18, 0x01, 0x22, 0x4d, 0x0a, 0x23, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52,
	0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x3a,
	0x02, 0x18, 0x01, 0x22, 0x6a, 0x0a, 0x2a, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x75,
	0x69, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x02, 0x18, 0x01, 0x22,
	0xa6, 0x01, 0x0a, 0x15, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c,
	0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x53, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72,
	0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x90, 0x04, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b, 0x65, 0x79,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x53,
	0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c,
	0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x14, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72,
	0x70, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x4c, 0x52, 0x50, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5b, 0x0a, 0x1a,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x4c, 0x52, 0x50, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0b, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x08, 0x52, 0x6f, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x52,
	0x6f, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x15,
	0x43, 0x72, 0x61, 0x73, 0x68, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50,
	0x4b, 0x65, 0x79, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4b, 0x65,
	0x79, 0x12, 0x53, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x14,
	0x46, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c,
	0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b,
	0x65, 0x79, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4b, 0x65, 0x79,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b, 0x65, 0x79, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x4b, 0x65, 0x79, 0x22, 0xa7, 0x01, 0x0a,
	0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x53, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x72, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x6d, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x4c, 0x52, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x72, 0x70, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x4c, 0x52, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x24, 0x5a, 0x22, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x2f, 0x62, 0x62, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actual_lrp_requests_proto_rawDescOnce sync.Once
	file_actual_lrp_requests_proto_rawDescData = file_actual_lrp_requests_proto_rawDesc
)

func file_actual_lrp_requests_proto_rawDescGZIP() []byte {
	file_actual_lrp_requests_proto_rawDescOnce.Do(func() {
		file_actual_lrp_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_actual_lrp_requests_proto_rawDescData)
	})
	return file_actual_lrp_requests_proto_rawDescData
}

var file_actual_lrp_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_actual_lrp_requests_proto_goTypes = []interface{}{
	(*ActualLRPLifecycleResponse)(nil),                 // 0: models.ActualLRPLifecycleResponse
	(*ActualLRPGroupsResponse)(nil),                    // 1: models.ActualLRPGroupsResponse
	(*ActualLRPGroupResponse)(nil),                     // 2: models.ActualLRPGroupResponse
	(*ActualLRPGroupsRequest)(nil),                     // 3: models.ActualLRPGroupsRequest
	(*ActualLRPGroupsByProcessGuidRequest)(nil),        // 4: models.ActualLRPGroupsByProcessGuidRequest
	(*ActualLRPGroupByProcessGuidAndIndexRequest)(nil), // 5: models.ActualLRPGroupByProcessGuidAndIndexRequest
	(*ClaimActualLRPRequest)(nil),                      // 6: models.ClaimActualLRPRequest
	(*StartActualLRPRequest)(nil),                      // 7: models.StartActualLRPRequest
	(*CrashActualLRPRequest)(nil),                      // 8: models.CrashActualLRPRequest
	(*FailActualLRPRequest)(nil),                       // 9: models.FailActualLRPRequest
	(*RetireActualLRPRequest)(nil),                     // 10: models.RetireActualLRPRequest
	(*RemoveActualLRPRequest)(nil),                     // 11: models.RemoveActualLRPRequest
	(*ActualLRPsResponse)(nil),                         // 12: models.ActualLRPsResponse
	(*ActualLRPsRequest)(nil),                          // 13: models.ActualLRPsRequest
	nil,                                                // 14: models.StartActualLRPRequest.MetricTagsEntry
	(*Error)(nil),                                      // 15: models.Error
	(*ActualLRPGroup)(nil),                             // 16: models.ActualLRPGroup
	(*ActualLRPInstanceKey)(nil),                       // 17: models.ActualLRPInstanceKey
	(*ActualLRPKey)(nil),                               // 18: models.ActualLRPKey
	(*ActualLRPNetInfo)(nil),                           // 19: models.ActualLRPNetInfo
	(*ActualLRPInternalRoute)(nil),                     // 20: models.ActualLRPInternalRoute
	(*ActualLRP)(nil),                                  // 21: models.ActualLRP
}
var file_actual_lrp_requests_proto_depIdxs = []int32{
	15, // 0: models.ActualLRPLifecycleResponse.error:type_name -> models.Error
	15, // 1: models.ActualLRPGroupsResponse.error:type_name -> models.Error
	16, // 2: models.ActualLRPGroupsResponse.actual_lrp_groups:type_name -> models.ActualLRPGroup
	15, // 3: models.ActualLRPGroupResponse.error:type_name -> models.Error
	16, // 4: models.ActualLRPGroupResponse.actual_lrp_group:type_name -> models.ActualLRPGroup
	17, // 5: models.ClaimActualLRPRequest.actual_lrp_instance_key:type_name -> models.ActualLRPInstanceKey
	18, // 6: models.StartActualLRPRequest.actual_lrp_key:type_name -> models.ActualLRPKey
	17, // 7: models.StartActualLRPRequest.actual_lrp_instance_key:type_name -> models.ActualLRPInstanceKey
	19, // 8: models.StartActualLRPRequest.actual_lrp_net_info:type_name -> models.ActualLRPNetInfo
	20, // 9: models.StartActualLRPRequest.actual_lrp_internal_routes:type_name -> models.ActualLRPInternalRoute
	14, // 10: models.StartActualLRPRequest.metric_tags:type_name -> models.StartActualLRPRequest.MetricTagsEntry
	18, // 11: models.CrashActualLRPRequest.actual_lrp_key:type_name -> models.ActualLRPKey
	17, // 12: models.CrashActualLRPRequest.actual_lrp_instance_key:type_name -> models.ActualLRPInstanceKey
	18, // 13: models.FailActualLRPRequest.actual_lrp_key:type_name -> models.ActualLRPKey
	18, // 14: models.RetireActualLRPRequest.actual_lrp_key:type_name -> models.ActualLRPKey
	17, // 15: models.RemoveActualLRPRequest.actual_lrp_instance_key:type_name -> models.ActualLRPInstanceKey
	15, // 16: models.ActualLRPsResponse.error:type_name -> models.Error
	21, // 17: models.ActualLRPsResponse.actual_lrps:type_name -> models.ActualLRP
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_actual_lrp_requests_proto_init() }
func file_actual_lrp_requests_proto_init() {
	if File_actual_lrp_requests_proto != nil {
		return
	}
	file_actual_lrp_proto_init()
	file_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_actual_lrp_requests_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPLifecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPGroupsByProcessGuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPGroupByProcessGuidAndIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimActualLRPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActualLRPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrashActualLRPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FailActualLRPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetireActualLRPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveActualLRPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actual_lrp_requests_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualLRPsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_actual_lrp_requests_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*StartActualLRPRequest_Routable)(nil),
	}
	file_actual_lrp_requests_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ActualLRPsRequest_Index)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actual_lrp_requests_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_actual_lrp_requests_proto_goTypes,
		DependencyIndexes: file_actual_lrp_requests_proto_depIdxs,
		MessageInfos:      file_actual_lrp_requests_proto_msgTypes,
	}.Build()
	File_actual_lrp_requests_proto = out.File
	file_actual_lrp_requests_proto_rawDesc = nil
	file_actual_lrp_requests_proto_goTypes = nil
	file_actual_lrp_requests_proto_depIdxs = nil
}
