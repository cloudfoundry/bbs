// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: actual_lrp_requests.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoActualLRPLifecycleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *ProtoError            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoActualLRPLifecycleResponse) Reset() {
	*x = ProtoActualLRPLifecycleResponse{}
	mi := &file_actual_lrp_requests_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPLifecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPLifecycleResponse) ProtoMessage() {}

func (x *ProtoActualLRPLifecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPLifecycleResponse.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPLifecycleResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoActualLRPLifecycleResponse) GetError() *ProtoError {
	if x != nil {
		return x.Error
	}
	return nil
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ProtoActualLRPGroupsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Error           *ProtoError            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ActualLrpGroups []*ProtoActualLRPGroup `protobuf:"bytes,2,rep,name=actual_lrp_groups,proto3" json:"actual_lrp_groups,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProtoActualLRPGroupsResponse) Reset() {
	*x = ProtoActualLRPGroupsResponse{}
	mi := &file_actual_lrp_requests_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPGroupsResponse) ProtoMessage() {}

func (x *ProtoActualLRPGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPGroupsResponse.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPGroupsResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoActualLRPGroupsResponse) GetError() *ProtoError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProtoActualLRPGroupsResponse) GetActualLrpGroups() []*ProtoActualLRPGroup {
	if x != nil {
		return x.ActualLrpGroups
	}
	return nil
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ProtoActualLRPGroupResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Error          *ProtoError            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ActualLrpGroup *ProtoActualLRPGroup   `protobuf:"bytes,2,opt,name=actual_lrp_group,proto3" json:"actual_lrp_group,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProtoActualLRPGroupResponse) Reset() {
	*x = ProtoActualLRPGroupResponse{}
	mi := &file_actual_lrp_requests_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPGroupResponse) ProtoMessage() {}

func (x *ProtoActualLRPGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPGroupResponse.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPGroupResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoActualLRPGroupResponse) GetError() *ProtoError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProtoActualLRPGroupResponse) GetActualLrpGroup() *ProtoActualLRPGroup {
	if x != nil {
		return x.ActualLrpGroup
	}
	return nil
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ProtoActualLRPGroupsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	CellId        string                 `protobuf:"bytes,2,opt,name=cell_id,proto3" json:"cell_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoActualLRPGroupsRequest) Reset() {
	*x = ProtoActualLRPGroupsRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPGroupsRequest) ProtoMessage() {}

func (x *ProtoActualLRPGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPGroupsRequest.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPGroupsRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoActualLRPGroupsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ProtoActualLRPGroupsRequest) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ProtoActualLRPGroupsByProcessGuidRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessGuid   string                 `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoActualLRPGroupsByProcessGuidRequest) Reset() {
	*x = ProtoActualLRPGroupsByProcessGuidRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPGroupsByProcessGuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPGroupsByProcessGuidRequest) ProtoMessage() {}

func (x *ProtoActualLRPGroupsByProcessGuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPGroupsByProcessGuidRequest.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPGroupsByProcessGuidRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoActualLRPGroupsByProcessGuidRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

// Deprecated: Marked as deprecated in actual_lrp_requests.proto.
type ProtoActualLRPGroupByProcessGuidAndIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessGuid   string                 `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoActualLRPGroupByProcessGuidAndIndexRequest) Reset() {
	*x = ProtoActualLRPGroupByProcessGuidAndIndexRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPGroupByProcessGuidAndIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPGroupByProcessGuidAndIndexRequest) ProtoMessage() {}

func (x *ProtoActualLRPGroupByProcessGuidAndIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPGroupByProcessGuidAndIndexRequest.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPGroupByProcessGuidAndIndexRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoActualLRPGroupByProcessGuidAndIndexRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (x *ProtoActualLRPGroupByProcessGuidAndIndexRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ProtoClaimActualLRPRequest struct {
	state                protoimpl.MessageState     `protogen:"open.v1"`
	ProcessGuid          string                     `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	Index                int32                      `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	ActualLrpInstanceKey *ProtoActualLRPInstanceKey `protobuf:"bytes,3,opt,name=actual_lrp_instance_key,proto3" json:"actual_lrp_instance_key,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProtoClaimActualLRPRequest) Reset() {
	*x = ProtoClaimActualLRPRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoClaimActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoClaimActualLRPRequest) ProtoMessage() {}

func (x *ProtoClaimActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoClaimActualLRPRequest.ProtoReflect.Descriptor instead.
func (*ProtoClaimActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoClaimActualLRPRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (x *ProtoClaimActualLRPRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoClaimActualLRPRequest) GetActualLrpInstanceKey() *ProtoActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

type ProtoStartActualLRPRequest struct {
	state                   protoimpl.MessageState         `protogen:"open.v1"`
	ActualLrpKey            *ProtoActualLRPKey             `protobuf:"bytes,1,opt,name=actual_lrp_key,proto3" json:"actual_lrp_key,omitempty"`
	ActualLrpInstanceKey    *ProtoActualLRPInstanceKey     `protobuf:"bytes,2,opt,name=actual_lrp_instance_key,proto3" json:"actual_lrp_instance_key,omitempty"`
	ActualLrpNetInfo        *ProtoActualLRPNetInfo         `protobuf:"bytes,3,opt,name=actual_lrp_net_info,proto3" json:"actual_lrp_net_info,omitempty"`
	ActualLrpInternalRoutes []*ProtoActualLRPInternalRoute `protobuf:"bytes,4,rep,name=actual_lrp_internal_routes,proto3" json:"actual_lrp_internal_routes,omitempty"`
	MetricTags              map[string]string              `protobuf:"bytes,5,rep,name=metric_tags,proto3" json:"metric_tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Routable                *bool                          `protobuf:"varint,6,opt,name=Routable,proto3,oneof" json:"Routable,omitempty"`
	AvailabilityZone        string                         `protobuf:"bytes,7,opt,name=availability_zone,proto3" json:"availability_zone,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ProtoStartActualLRPRequest) Reset() {
	*x = ProtoStartActualLRPRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoStartActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoStartActualLRPRequest) ProtoMessage() {}

func (x *ProtoStartActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoStartActualLRPRequest.ProtoReflect.Descriptor instead.
func (*ProtoStartActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoStartActualLRPRequest) GetActualLrpKey() *ProtoActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *ProtoStartActualLRPRequest) GetActualLrpInstanceKey() *ProtoActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

func (x *ProtoStartActualLRPRequest) GetActualLrpNetInfo() *ProtoActualLRPNetInfo {
	if x != nil {
		return x.ActualLrpNetInfo
	}
	return nil
}

func (x *ProtoStartActualLRPRequest) GetActualLrpInternalRoutes() []*ProtoActualLRPInternalRoute {
	if x != nil {
		return x.ActualLrpInternalRoutes
	}
	return nil
}

func (x *ProtoStartActualLRPRequest) GetMetricTags() map[string]string {
	if x != nil {
		return x.MetricTags
	}
	return nil
}

func (x *ProtoStartActualLRPRequest) GetRoutable() bool {
	if x != nil && x.Routable != nil {
		return *x.Routable
	}
	return false
}

func (x *ProtoStartActualLRPRequest) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

type ProtoCrashActualLRPRequest struct {
	state                protoimpl.MessageState     `protogen:"open.v1"`
	ActualLrpKey         *ProtoActualLRPKey         `protobuf:"bytes,1,opt,name=actual_lrp_key,proto3" json:"actual_lrp_key,omitempty"`
	ActualLrpInstanceKey *ProtoActualLRPInstanceKey `protobuf:"bytes,2,opt,name=actual_lrp_instance_key,proto3" json:"actual_lrp_instance_key,omitempty"`
	ErrorMessage         string                     `protobuf:"bytes,3,opt,name=error_message,proto3" json:"error_message,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProtoCrashActualLRPRequest) Reset() {
	*x = ProtoCrashActualLRPRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoCrashActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCrashActualLRPRequest) ProtoMessage() {}

func (x *ProtoCrashActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCrashActualLRPRequest.ProtoReflect.Descriptor instead.
func (*ProtoCrashActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoCrashActualLRPRequest) GetActualLrpKey() *ProtoActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *ProtoCrashActualLRPRequest) GetActualLrpInstanceKey() *ProtoActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

func (x *ProtoCrashActualLRPRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ProtoFailActualLRPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActualLrpKey  *ProtoActualLRPKey     `protobuf:"bytes,1,opt,name=actual_lrp_key,proto3" json:"actual_lrp_key,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoFailActualLRPRequest) Reset() {
	*x = ProtoFailActualLRPRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoFailActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFailActualLRPRequest) ProtoMessage() {}

func (x *ProtoFailActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFailActualLRPRequest.ProtoReflect.Descriptor instead.
func (*ProtoFailActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoFailActualLRPRequest) GetActualLrpKey() *ProtoActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

func (x *ProtoFailActualLRPRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ProtoRetireActualLRPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActualLrpKey  *ProtoActualLRPKey     `protobuf:"bytes,1,opt,name=actual_lrp_key,proto3" json:"actual_lrp_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoRetireActualLRPRequest) Reset() {
	*x = ProtoRetireActualLRPRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoRetireActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRetireActualLRPRequest) ProtoMessage() {}

func (x *ProtoRetireActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRetireActualLRPRequest.ProtoReflect.Descriptor instead.
func (*ProtoRetireActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoRetireActualLRPRequest) GetActualLrpKey() *ProtoActualLRPKey {
	if x != nil {
		return x.ActualLrpKey
	}
	return nil
}

type ProtoRemoveActualLRPRequest struct {
	state                protoimpl.MessageState     `protogen:"open.v1"`
	ProcessGuid          string                     `protobuf:"bytes,1,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	Index                int32                      `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	ActualLrpInstanceKey *ProtoActualLRPInstanceKey `protobuf:"bytes,3,opt,name=actual_lrp_instance_key,proto3" json:"actual_lrp_instance_key,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProtoRemoveActualLRPRequest) Reset() {
	*x = ProtoRemoveActualLRPRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoRemoveActualLRPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRemoveActualLRPRequest) ProtoMessage() {}

func (x *ProtoRemoveActualLRPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRemoveActualLRPRequest.ProtoReflect.Descriptor instead.
func (*ProtoRemoveActualLRPRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{11}
}

func (x *ProtoRemoveActualLRPRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (x *ProtoRemoveActualLRPRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoRemoveActualLRPRequest) GetActualLrpInstanceKey() *ProtoActualLRPInstanceKey {
	if x != nil {
		return x.ActualLrpInstanceKey
	}
	return nil
}

type ProtoActualLRPsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *ProtoError            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ActualLrps    []*ProtoActualLRP      `protobuf:"bytes,2,rep,name=actual_lrps,proto3" json:"actual_lrps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoActualLRPsResponse) Reset() {
	*x = ProtoActualLRPsResponse{}
	mi := &file_actual_lrp_requests_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPsResponse) ProtoMessage() {}

func (x *ProtoActualLRPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPsResponse.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPsResponse) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{12}
}

func (x *ProtoActualLRPsResponse) GetError() *ProtoError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProtoActualLRPsResponse) GetActualLrps() []*ProtoActualLRP {
	if x != nil {
		return x.ActualLrps
	}
	return nil
}

type ProtoActualLRPsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	CellId        string                 `protobuf:"bytes,2,opt,name=cell_id,proto3" json:"cell_id,omitempty"`
	ProcessGuid   string                 `protobuf:"bytes,3,opt,name=process_guid,proto3" json:"process_guid,omitempty"`
	Index         *int32                 `protobuf:"varint,4,opt,name=index,proto3,oneof" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoActualLRPsRequest) Reset() {
	*x = ProtoActualLRPsRequest{}
	mi := &file_actual_lrp_requests_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoActualLRPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoActualLRPsRequest) ProtoMessage() {}

func (x *ProtoActualLRPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actual_lrp_requests_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoActualLRPsRequest.ProtoReflect.Descriptor instead.
func (*ProtoActualLRPsRequest) Descriptor() ([]byte, []int) {
	return file_actual_lrp_requests_proto_rawDescGZIP(), []int{13}
}

func (x *ProtoActualLRPsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ProtoActualLRPsRequest) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *ProtoActualLRPsRequest) GetProcessGuid() string {
	if x != nil {
		return x.ProcessGuid
	}
	return ""
}

func (x *ProtoActualLRPsRequest) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

var File_actual_lrp_requests_proto protoreflect.FileDescriptor

var file_actual_lrp_requests_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x1a, 0x09, 0x62, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a,
	0x1f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x1c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x6c, 0x72, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x3a, 0x02, 0x18, 0x01, 0x22, 0x94, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47,
	0x0a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72,
	0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x5d, 0x0a, 0x1b, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x07, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x57, 0x0a, 0x28, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x75, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e,
	0x01, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x3a,
	0x02, 0x18, 0x01, 0x22, 0x79, 0x0a, 0x2f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x47, 0x75, 0x69, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e,
	0x01, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03,
	0xc0, 0x3e, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xbd,
	0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x5b, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72,
	0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0xe8,
	0x04, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b, 0x65, 0x79,
	0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79,
	0x12, 0x5b, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x4f, 0x0a,
	0x13, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6e, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c,
	0x52, 0x50, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x63,
	0x0a, 0x1a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x1a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x52, 0x6f, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x52,
	0x6f, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0x3d, 0x0a,
	0x0f, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x52, 0x6f, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x1a, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x43, 0x72, 0x61, 0x73, 0x68, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x5b, 0x0a, 0x17, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xc0, 0x3e, 0x01, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x69,
	0x6c, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52,
	0x50, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70,
	0x5f, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e, 0x01,
	0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x60, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x4b, 0x65,
	0x79, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x6b, 0x65,
	0x79, 0x22, 0xbe, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5b, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x52, 0x50, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x22, 0x7d, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x52, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x6c, 0x72, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x52, 0x50, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x72, 0x70,
	0x73, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x52, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e,
	0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x65, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52,
	0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xc0, 0x3e, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x03, 0xc0, 0x3e, 0x01, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x22, 0x5a, 0x20, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x62, 0x62, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actual_lrp_requests_proto_rawDescOnce sync.Once
	file_actual_lrp_requests_proto_rawDescData = file_actual_lrp_requests_proto_rawDesc
)

func file_actual_lrp_requests_proto_rawDescGZIP() []byte {
	file_actual_lrp_requests_proto_rawDescOnce.Do(func() {
		file_actual_lrp_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_actual_lrp_requests_proto_rawDescData)
	})
	return file_actual_lrp_requests_proto_rawDescData
}

var file_actual_lrp_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_actual_lrp_requests_proto_goTypes = []any{
	(*ProtoActualLRPLifecycleResponse)(nil),                 // 0: models.ProtoActualLRPLifecycleResponse
	(*ProtoActualLRPGroupsResponse)(nil),                    // 1: models.ProtoActualLRPGroupsResponse
	(*ProtoActualLRPGroupResponse)(nil),                     // 2: models.ProtoActualLRPGroupResponse
	(*ProtoActualLRPGroupsRequest)(nil),                     // 3: models.ProtoActualLRPGroupsRequest
	(*ProtoActualLRPGroupsByProcessGuidRequest)(nil),        // 4: models.ProtoActualLRPGroupsByProcessGuidRequest
	(*ProtoActualLRPGroupByProcessGuidAndIndexRequest)(nil), // 5: models.ProtoActualLRPGroupByProcessGuidAndIndexRequest
	(*ProtoClaimActualLRPRequest)(nil),                      // 6: models.ProtoClaimActualLRPRequest
	(*ProtoStartActualLRPRequest)(nil),                      // 7: models.ProtoStartActualLRPRequest
	(*ProtoCrashActualLRPRequest)(nil),                      // 8: models.ProtoCrashActualLRPRequest
	(*ProtoFailActualLRPRequest)(nil),                       // 9: models.ProtoFailActualLRPRequest
	(*ProtoRetireActualLRPRequest)(nil),                     // 10: models.ProtoRetireActualLRPRequest
	(*ProtoRemoveActualLRPRequest)(nil),                     // 11: models.ProtoRemoveActualLRPRequest
	(*ProtoActualLRPsResponse)(nil),                         // 12: models.ProtoActualLRPsResponse
	(*ProtoActualLRPsRequest)(nil),                          // 13: models.ProtoActualLRPsRequest
	nil,                                                     // 14: models.ProtoStartActualLRPRequest.MetricTagsEntry
	(*ProtoError)(nil),                                      // 15: models.ProtoError
	(*ProtoActualLRPGroup)(nil),                             // 16: models.ProtoActualLRPGroup
	(*ProtoActualLRPInstanceKey)(nil),                       // 17: models.ProtoActualLRPInstanceKey
	(*ProtoActualLRPKey)(nil),                               // 18: models.ProtoActualLRPKey
	(*ProtoActualLRPNetInfo)(nil),                           // 19: models.ProtoActualLRPNetInfo
	(*ProtoActualLRPInternalRoute)(nil),                     // 20: models.ProtoActualLRPInternalRoute
	(*ProtoActualLRP)(nil),                                  // 21: models.ProtoActualLRP
}
var file_actual_lrp_requests_proto_depIdxs = []int32{
	15, // 0: models.ProtoActualLRPLifecycleResponse.error:type_name -> models.ProtoError
	15, // 1: models.ProtoActualLRPGroupsResponse.error:type_name -> models.ProtoError
	16, // 2: models.ProtoActualLRPGroupsResponse.actual_lrp_groups:type_name -> models.ProtoActualLRPGroup
	15, // 3: models.ProtoActualLRPGroupResponse.error:type_name -> models.ProtoError
	16, // 4: models.ProtoActualLRPGroupResponse.actual_lrp_group:type_name -> models.ProtoActualLRPGroup
	17, // 5: models.ProtoClaimActualLRPRequest.actual_lrp_instance_key:type_name -> models.ProtoActualLRPInstanceKey
	18, // 6: models.ProtoStartActualLRPRequest.actual_lrp_key:type_name -> models.ProtoActualLRPKey
	17, // 7: models.ProtoStartActualLRPRequest.actual_lrp_instance_key:type_name -> models.ProtoActualLRPInstanceKey
	19, // 8: models.ProtoStartActualLRPRequest.actual_lrp_net_info:type_name -> models.ProtoActualLRPNetInfo
	20, // 9: models.ProtoStartActualLRPRequest.actual_lrp_internal_routes:type_name -> models.ProtoActualLRPInternalRoute
	14, // 10: models.ProtoStartActualLRPRequest.metric_tags:type_name -> models.ProtoStartActualLRPRequest.MetricTagsEntry
	18, // 11: models.ProtoCrashActualLRPRequest.actual_lrp_key:type_name -> models.ProtoActualLRPKey
	17, // 12: models.ProtoCrashActualLRPRequest.actual_lrp_instance_key:type_name -> models.ProtoActualLRPInstanceKey
	18, // 13: models.ProtoFailActualLRPRequest.actual_lrp_key:type_name -> models.ProtoActualLRPKey
	18, // 14: models.ProtoRetireActualLRPRequest.actual_lrp_key:type_name -> models.ProtoActualLRPKey
	17, // 15: models.ProtoRemoveActualLRPRequest.actual_lrp_instance_key:type_name -> models.ProtoActualLRPInstanceKey
	15, // 16: models.ProtoActualLRPsResponse.error:type_name -> models.ProtoError
	21, // 17: models.ProtoActualLRPsResponse.actual_lrps:type_name -> models.ProtoActualLRP
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_actual_lrp_requests_proto_init() }
func file_actual_lrp_requests_proto_init() {
	if File_actual_lrp_requests_proto != nil {
		return
	}
	file_bbs_proto_init()
	file_actual_lrp_proto_init()
	file_error_proto_init()
	file_actual_lrp_requests_proto_msgTypes[7].OneofWrappers = []any{}
	file_actual_lrp_requests_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actual_lrp_requests_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_actual_lrp_requests_proto_goTypes,
		DependencyIndexes: file_actual_lrp_requests_proto_depIdxs,
		MessageInfos:      file_actual_lrp_requests_proto_msgTypes,
	}.Build()
	File_actual_lrp_requests_proto = out.File
	file_actual_lrp_requests_proto_rawDesc = nil
	file_actual_lrp_requests_proto_goTypes = nil
	file_actual_lrp_requests_proto_depIdxs = nil
}
