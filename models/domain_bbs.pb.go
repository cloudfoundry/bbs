// Code generated by protoc-gen-go-bbs. DO NOT EDIT.
// versions:
// - protoc-gen-go-bbs v0.0.1
// - protoc            v5.27.0--rc1
// source: domain.proto

package models

// Prevent copylock errors when using ProtoDomainsResponse directly
type DomainsResponse struct {
	Error   *Error
	Domains []string
}

func (x *DomainsResponse) ToProto() *ProtoDomainsResponse {
	proto := &ProtoDomainsResponse{
		Error:   x.Error.ToProto(),
		Domains: x.Domains,
	}
	return proto
}

func DomainsResponseProtoMap(values []*DomainsResponse) []*ProtoDomainsResponse {
	result := make([]*ProtoDomainsResponse, len(values))
	for i, val := range values {
		result[i] = val.ToProto()
	}
	return result
}

// Prevent copylock errors when using ProtoUpsertDomainResponse directly
type UpsertDomainResponse struct {
	Error *Error
}

func (x *UpsertDomainResponse) ToProto() *ProtoUpsertDomainResponse {
	proto := &ProtoUpsertDomainResponse{
		Error: x.Error.ToProto(),
	}
	return proto
}

func UpsertDomainResponseProtoMap(values []*UpsertDomainResponse) []*ProtoUpsertDomainResponse {
	result := make([]*ProtoUpsertDomainResponse, len(values))
	for i, val := range values {
		result[i] = val.ToProto()
	}
	return result
}

// Prevent copylock errors when using ProtoUpsertDomainRequest directly
type UpsertDomainRequest struct {
	Domain string
	Ttl    uint32
}

func (x *UpsertDomainRequest) ToProto() *ProtoUpsertDomainRequest {
	proto := &ProtoUpsertDomainRequest{
		Domain: x.Domain,
		Ttl:    x.Ttl,
	}
	return proto
}

func UpsertDomainRequestProtoMap(values []*UpsertDomainRequest) []*ProtoUpsertDomainRequest {
	result := make([]*ProtoUpsertDomainRequest, len(values))
	for i, val := range values {
		result[i] = val.ToProto()
	}
	return result
}
